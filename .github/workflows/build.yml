name: Build and Upload Binaries

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    
    env:
      BASE_PATH: ${{ github.workspace }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build binary
        run: |
          python $BASE_PATH/PhraseCraft/build_phrasec.py

      - name: Archive Linux binary
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          zip -j $BASE_PATH/linux_binary.zip $BASE_PATH/PhraseCraft/dist/phrasec

      - name: Archive Windows binary
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          powershell Compress-Archive -Path "$Env:BASE_PATH\PhraseCraft\dist\phrasec.exe" -DestinationPath "$Env:BASE_PATH\windows_binary.zip"

      - name: Upload Linux binary
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: linux-binary
          path: ${{ env.BASE_PATH }}/linux_binary.zip

      - name: Upload Windows binary
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: windows-binary
          path: ${{ env.BASE_PATH }}/windows_binary.zip
